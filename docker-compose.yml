services:
  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./loki:/etc/loki

  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - /var/log:/var/log
      - ./promtail:/etc/promtail
    command: -config.file=/etc/promtail/promtail-config.yaml

  grafana:
    image: grafana/grafana:10.4.1
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana

  mongo:
    image: mongo:6.0
    container_name: monogodb
    ports: 
      - "27017:27017"
    volumes: 
      - mongo-data:/data/db
      
volumes:
  grafana-storage:
  mongo-data:

# services:
#   ecommerce-api:
#     build: .
#     ports:
#       - "8080:8080"
#     environment:
#       - SERVER_PORT=8080
#       - SERVER_HOST=0.0.0.0
#       - OAUTH_JWT_EXPIRATION_TIME=3600
#       - OAUTH_JWT_ISSUER=ecommerce-api
#     env_file:
#       - .env
#     restart: unless-stopped
#     healthcheck:
#       test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 40s

  # Optional: Add Redis for token storage (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # Optional: Add PostgreSQL database (uncomment if needed)
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: ecommerce
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

# volumes:
#   postgres_data:
